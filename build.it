function isDarwin() {
    return @{
        var s,e,o = $("uname");
        if(s && e==0) return o[1].trim();
    } == "Darwin";
}

target("IceTea", "exe") {
    input: pfs.glob("src", "*.cpp"),
    settings: {
        CXX: {
            include_dirs: ["src"],
            warnings: (sys.type == "unix" ? [
                "no-switch"
            ] : [
                // None
            ]),
            flags: (!DEBUG && sys.type == "unix" && isDarwin ? [
                "-ffunction-sections",
                "-fdata-sections",
            ] : []),
            optimization: (DEBUG ? "none":"size")
        },
        LINK: {
            libraries: (sys.type == "unix" ? [
                "pthread"
            ] : [
                // None?
            ]),
            flags: (!DEBUG && sys.type == "unix" && isDarwin ? [
                "-dead_strip"
            ] : []),
        }
    },
}

action("all") {
    build: ["*"],
    clean: ["*"]
}

action("dist"){|scheme|
    print "Creating a distribution...";
    if(sys.which("tar") != "") {
        sys.cd(pfs.dirname(__FILE__));
        shell "tar cvfz icetea.tar.gz icetea* README.md TODO.md *.it"
    }
}

action("tests"){|scheme|
    require "tests/run_tests"
}
