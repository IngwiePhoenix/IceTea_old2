function isDarwin() {
    return @{
        var s,e,o = $("uname");
        if(s && e==0) return o[1].trim();
    } == "Darwin";
}

target("icetea", "exe") {
    title: "IceTea",
    input: pfs.glob("src", "*.cpp"),
    init: function() {
        cli.group "IceTea"
        cli.insert {
            longopt: "--it-optimize",
            desc: "Run optimizations when compiling."
        }
    },
    configure: function() {
        echo detect.out .. "Do we want to optimize IceTea (aka. release build)?";
        if(DEBUG && cli.check("--it-optimize")) {
            print " Can not optimize on debug build."
        } else if(!DEBUG && cli.check("--it-optimize")) {
            print " Yes.";
            if(sys.type == "unix") {
                @settings.CXX.optimization = "size";
                if(isDarwin()) {
                    // FIXME: Are they OS X only, and could we possibly use them on *NIX?
                    @settings.CXX.flags += [
                        "-ffunction-sections",
                        "-fdata-sections"
                    ];
                }
            }
        } else {
            print " No."
        }
        return true;
    },
    settings: {
        CXX: {
            includeDirs: ["src"],
            warnings: (sys.type == "unix" ? [
                // ObjectScript
                "no-switch"
            ] : []),
            defines: [
                // We can go all-out now. Include everything.
                "ICETEA_FULL",

                // Force IceTea into using INCBIN_EXTERNAL instead.
                // Allows for the generated incbin script file to be used.
                // Not needed on Windows.
                "ICETEA_INCBIN_FORCE_EXTERNAL"
            ]
        },
        LINK: {
            libraries: [],
            flags: (!DEBUG && sys.type == "unix" && isDarwin ? [
                // OS X: Strip dead symbols.
                "-dead_strip"
            ] : []) + (sys.type == "unix" ? [
                // UNIX: Use -pthread - for now.
                // FIXME: Teach detect to check for the proper flag to use pThreads.
                "-pthread"
            ]),
        }
    },
}

action("dist"){|scheme|
    print "Creating a distribution...";
    if(sys.which("tar") != "") {
        sys.cd(pfs.dirname(__FILE__));
        shell "tar cvfz icetea.tar.gz icetea* README.md TODO.md *.it"
    }
}

action("tests"){|scheme|
    require "tests/run_tests"
}

action("incbin") {
    build: ["incbin"],
    clear: ["incbin"]
}
