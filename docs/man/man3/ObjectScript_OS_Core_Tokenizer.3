.TH "ObjectScript::OS::Core::Tokenizer" 3 "Sat Mar 26 2016" "IceTea" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ObjectScript::OS::Core::Tokenizer \- 
.SH SYNOPSIS
.br
.PP
.SS "Classes"

.in +1c
.ti -1c
.RI "struct \fBInitOperators\fP"
.br
.ti -1c
.RI "struct \fBOperatorDesc\fP"
.br
.ti -1c
.RI "struct \fBSettings\fP"
.br
.ti -1c
.RI "class \fBTextData\fP"
.br
.ti -1c
.RI "class \fBTokenData\fP"
.br
.in -1c
.SS "Public Types"

.in +1c
.ti -1c
.RI "enum \fBError\fP { \fBERROR_NOTHING\fP, \fBERROR_MULTI_LINE_COMMENT\fP, \fBERROR_CONST_STRING\fP, \fBERROR_CONST_STRING_ESCAPE_CHAR\fP, \fBERROR_SYNTAX\fP }"
.br
.ti -1c
.RI "enum \fBTokenType\fP { \fBNOTHING\fP, \fBBEGIN_CODE_BLOCK\fP, \fBEND_CODE_BLOCK\fP, \fBBEGIN_BRACKET_BLOCK\fP, \fBEND_BRACKET_BLOCK\fP, \fBBEGIN_ARRAY_BLOCK\fP, \fBEND_ARRAY_BLOCK\fP, \fBCODE_SEPARATOR\fP, \fBPARAM_SEPARATOR\fP, \fBCOMMENT_LINE\fP, \fBCOMMENT_MULTI_LINE\fP, \fBNAME\fP, \fBSTRING\fP, \fBOUTPUT_STRING\fP, \fBOUTPUT_NEXT_VALUE\fP, \fBREGEXP_STRING\fP, \fBBEFORE_INJECT_VAR\fP, \fBAFTER_INJECT_VAR\fP, \fBNUMBER\fP, \fBOPERATOR\fP, \fBBINARY_OPERATOR\fP, \fBSEPARATOR\fP, \fBOPERATOR_INDIRECT\fP, \fBOPERATOR_CONCAT\fP, \fBREST_ARGUMENTS\fP, \fBOPERATOR_THIS\fP, \fBOPERATOR_LOGIC_AND\fP, \fBOPERATOR_LOGIC_OR\fP, \fBOPERATOR_LOGIC_PTR_EQ\fP, \fBOPERATOR_LOGIC_PTR_NE\fP, \fBOPERATOR_LOGIC_EQ\fP, \fBOPERATOR_LOGIC_NE\fP, \fBOPERATOR_LOGIC_GE\fP, \fBOPERATOR_LOGIC_LE\fP, \fBOPERATOR_LOGIC_GREATER\fP, \fBOPERATOR_LOGIC_LESS\fP, \fBOPERATOR_COMPARE\fP, \fBOPERATOR_LOGIC_NOT\fP, \fBOPERATOR_INC\fP, \fBOPERATOR_DEC\fP, \fBOPERATOR_QUESTION\fP, \fBOPERATOR_COLON\fP, \fBOPERATOR_IN\fP, \fBOPERATOR_IS\fP, \fBOPERATOR_AS\fP, \fBOPERATOR_LENGTH\fP, \fBOPERATOR_BIT_AND\fP, \fBOPERATOR_BIT_OR\fP, \fBOPERATOR_BIT_XOR\fP, \fBOPERATOR_BIT_NOT\fP, \fBOPERATOR_ADD\fP, \fBOPERATOR_SUB\fP, \fBOPERATOR_MUL\fP, \fBOPERATOR_DIV\fP, \fBOPERATOR_MOD\fP, \fBOPERATOR_LSHIFT\fP, \fBOPERATOR_RSHIFT\fP, \fBOPERATOR_POW\fP, \fBOPERATOR_BIT_AND_ASSIGN\fP, \fBOPERATOR_BIT_OR_ASSIGN\fP, \fBOPERATOR_BIT_XOR_ASSIGN\fP, \fBOPERATOR_BIT_NOT_ASSIGN\fP, \fBOPERATOR_ADD_ASSIGN\fP, \fBOPERATOR_SUB_ASSIGN\fP, \fBOPERATOR_MUL_ASSIGN\fP, \fBOPERATOR_DIV_ASSIGN\fP, \fBOPERATOR_MOD_ASSIGN\fP, \fBOPERATOR_LSHIFT_ASSIGN\fP, \fBOPERATOR_RSHIFT_ASSIGN\fP, \fBOPERATOR_POW_ASSIGN\fP, \fBOPERATOR_ASSIGN\fP, \fBOPERATOR_RESERVED\fP, \fBOPERATOR_END\fP, \fBERROR_TOKEN\fP }"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBTokenizer\fP (\fBOS\fP *)"
.br
.ti -1c
.RI "\fBOS\fP * \fBgetAllocator\fP ()"
.br
.ti -1c
.RI "\fBTextData\fP * \fBgetTextData\fP () const "
.br
.ti -1c
.RI "bool \fBisError\fP () const "
.br
.ti -1c
.RI "Error \fBgetErrorCode\fP () const "
.br
.ti -1c
.RI "int \fBgetErrorLine\fP () const "
.br
.ti -1c
.RI "int \fBgetErrorPos\fP () const "
.br
.ti -1c
.RI "\fBString\fP \fBgetFilename\fP () const "
.br
.ti -1c
.RI "\fBString\fP \fBgetLineString\fP (int i) const "
.br
.ti -1c
.RI "int \fBgetNumLines\fP () const "
.br
.ti -1c
.RI "bool \fBgetSettingSaveComment\fP () const "
.br
.ti -1c
.RI "void \fBsetSettingSaveComment\fP (bool value)"
.br
.ti -1c
.RI "bool \fBparseText\fP (const char *text, int len, const \fBString\fP &filename, bool is_real_file, OS_ESourceCodeType source_code_type, bool check_utf8_bom)"
.br
.ti -1c
.RI "int \fBgetNumTokens\fP () const "
.br
.ti -1c
.RI "\fBTokenData\fP * \fBgetToken\fP (int i) const "
.br
.ti -1c
.RI "\fBTokenData\fP * \fBremoveToken\fP (int i)"
.br
.ti -1c
.RI "void \fBinsertToken\fP (int i, \fBTokenData\fP *token)"
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static const char * \fBgetTokenTypeName\fP (TokenType tokenType)"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "\fBTokenData\fP * \fBaddToken\fP (const \fBString\fP &token, TokenType type, int line, int pos)"
.br
.ti -1c
.RI "bool \fBparseFloat\fP (const char *&str, \fBFloatType\fP< double >::type &fval, bool parse_end_spaces)"
.br
.ti -1c
.RI "bool \fBparseLines\fP (OS_ESourceCodeType source_code_type, bool check_utf8_bom)"
.br
.in -1c
.SS "Static Protected Member Functions"

.in +1c
.ti -1c
.RI "static int \fBcompareOperatorDesc\fP (const void *a, const void *b)"
.br
.ti -1c
.RI "static void \fBinitOperatorsTable\fP ()"
.br
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "struct \fBObjectScript::OS::Core::Tokenizer::Settings\fP \fBsettings\fP"
.br
.ti -1c
.RI "\fBOS\fP * \fBallocator\fP"
.br
.ti -1c
.RI "\fBTextData\fP * \fBtext_data\fP"
.br
.ti -1c
.RI "int \fBcur_line\fP"
.br
.ti -1c
.RI "int \fBcur_pos\fP"
.br
.ti -1c
.RI "\fBVector\fP< \fBTokenData\fP * > \fBtokens\fP"
.br
.ti -1c
.RI "Error \fBerror\fP"
.br
.in -1c
.SS "Static Protected Attributes"

.in +1c
.ti -1c
.RI "static const int \fBoperator_count\fP = sizeof(operator_desc) / sizeof(operator_desc[0])"
.br
.ti -1c
.RI "static \fBOperatorDesc\fP \fBoperator_desc\fP []"
.br
.ti -1c
.RI "static bool \fBoperator_initialized\fP = false"
.br
.ti -1c
.RI "static \fBInitOperators\fP \fBinit_operators\fP = \fBOS::Core::Tokenizer::InitOperators\fP()"
.br
.in -1c
.SH "Detailed Description"
.PP 
Definition at line 953 of file objectscript\&.h\&.
.SH "Member Function Documentation"
.PP 
.SS "bool OS::Core::Tokenizer::parseLines (OS_ESourceCodeType source_code_type, bool check_utf8_bom)\fC [protected]\fP"
var_in_string && 
.PP
Definition at line 1938 of file objectscript\&.cpp\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for IceTea from the source code\&.
