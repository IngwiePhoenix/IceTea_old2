.TH "SI_ConvertA< SI_CHAR >" 3 "Sat Mar 26 2016" "IceTea" \" -*- nroff -*-
.ad l
.nh
.SH NAME
SI_ConvertA< SI_CHAR > \- Null conversion class for MBCS/UTF-8 to char (or equivalent)\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <SimpleIni\&.h>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBSI_ConvertA\fP (bool a_bStoreIsUtf8)"
.br
.ti -1c
.RI "\fBSI_ConvertA\fP (const \fBSI_ConvertA\fP &rhs)"
.br
.ti -1c
.RI "\fBSI_ConvertA\fP & \fBoperator=\fP (const \fBSI_ConvertA\fP &rhs)"
.br
.ti -1c
.RI "size_t \fBSizeFromStore\fP (const char *a_pInputData, size_t a_uInputDataLen)"
.br
.RI "\fICalculate the number of SI_CHAR required for converting the input from the storage format\&. \fP"
.ti -1c
.RI "bool \fBConvertFromStore\fP (const char *a_pInputData, size_t a_uInputDataLen, SI_CHAR *a_pOutputData, size_t a_uOutputDataSize)"
.br
.RI "\fIConvert the input string from the storage format to SI_CHAR\&. \fP"
.ti -1c
.RI "size_t \fBSizeToStore\fP (const SI_CHAR *a_pInputData)"
.br
.RI "\fICalculate the number of char required by the storage format of this data\&. \fP"
.ti -1c
.RI "bool \fBConvertToStore\fP (const SI_CHAR *a_pInputData, char *a_pOutputData, size_t a_uOutputDataSize)"
.br
.RI "\fIConvert the input string to the storage format of this data\&. \fP"
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<class SI_CHAR>
.br
class SI_ConvertA< SI_CHAR >"
Null conversion class for MBCS/UTF-8 to char (or equivalent)\&. 
.PP
Definition at line 2725 of file SimpleIni\&.h\&.
.SH "Member Function Documentation"
.PP 
.SS "template<class SI_CHAR > bool \fBSI_ConvertA\fP< SI_CHAR >::ConvertFromStore (const char * a_pInputData, size_t a_uInputDataLen, SI_CHAR * a_pOutputData, size_t a_uOutputDataSize)\fC [inline]\fP"

.PP
Convert the input string from the storage format to SI_CHAR\&. The storage format is always UTF-8 or MBCS\&.
.PP
\fBParameters:\fP
.RS 4
\fIa_pInputData\fP Data in storage format to be converted to SI_CHAR\&. 
.br
\fIa_uInputDataLen\fP Length of storage format data in bytes\&. This must be the actual length of the data, including NULL byte if NULL terminated string is required\&. 
.br
\fIa_pOutputData\fP Pointer to the output buffer to received the converted data\&. 
.br
\fIa_uOutputDataSize\fP Size of the output buffer in SI_CHAR\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
true if all of the input data was successfully converted\&. 
.RE
.PP

.PP
Definition at line 2776 of file SimpleIni\&.h\&.
.SS "template<class SI_CHAR > bool \fBSI_ConvertA\fP< SI_CHAR >::ConvertToStore (const SI_CHAR * a_pInputData, char * a_pOutputData, size_t a_uOutputDataSize)\fC [inline]\fP"

.PP
Convert the input string to the storage format of this data\&. The storage format is always UTF-8 or MBCS\&.
.PP
\fBParameters:\fP
.RS 4
\fIa_pInputData\fP NULL terminated source string to convert\&. All of the data will be converted including the terminating NULL character\&. 
.br
\fIa_pOutputData\fP Pointer to the buffer to receive the converted string\&. 
.br
\fIa_uOutputDataSize\fP Size of the output buffer in char\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
true if all of the input data, including the terminating NULL character was successfully converted\&. 
.RE
.PP

.PP
Definition at line 2820 of file SimpleIni\&.h\&.
.SS "template<class SI_CHAR > size_t \fBSI_ConvertA\fP< SI_CHAR >::SizeFromStore (const char * a_pInputData, size_t a_uInputDataLen)\fC [inline]\fP"

.PP
Calculate the number of SI_CHAR required for converting the input from the storage format\&. The storage format is always UTF-8 or MBCS\&.
.PP
\fBParameters:\fP
.RS 4
\fIa_pInputData\fP Data in storage format to be converted to SI_CHAR\&. 
.br
\fIa_uInputDataLen\fP Length of storage format data in bytes\&. This must be the actual length of the data, including NULL byte if NULL terminated string is required\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
Number of SI_CHAR required by the string when converted\&. If there are embedded NULL bytes in the input data, only the string up and not including the NULL byte will be converted\&. 
.PP
-1 cast to size_t on a conversion error\&. 
.RE
.PP

.PP
Definition at line 2752 of file SimpleIni\&.h\&.
.SS "template<class SI_CHAR > size_t \fBSI_ConvertA\fP< SI_CHAR >::SizeToStore (const SI_CHAR * a_pInputData)\fC [inline]\fP"

.PP
Calculate the number of char required by the storage format of this data\&. The storage format is always UTF-8 or MBCS\&.
.PP
\fBParameters:\fP
.RS 4
\fIa_pInputData\fP NULL terminated string to calculate the number of bytes required to be converted to storage format\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
Number of bytes required by the string when converted to storage format\&. This size always includes space for the terminating NULL character\&. 
.PP
-1 cast to size_t on a conversion error\&. 
.RE
.PP

.PP
Definition at line 2800 of file SimpleIni\&.h\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for IceTea from the source code\&.
