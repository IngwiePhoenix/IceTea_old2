.TH "ObjectScript::OS::Core::Compiler::Scope" 3 "Sat Mar 26 2016" "IceTea" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ObjectScript::OS::Core::Compiler::Scope \- 
.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBObjectScript::OS::Core::Compiler::Expression\fP\&.
.SS "Classes"

.in +1c
.ti -1c
.RI "struct \fBLocalVar\fP"
.br
.ti -1c
.RI "struct \fBLocalVarCompiled\fP"
.br
.ti -1c
.RI "struct \fBLoopBreak\fP"
.br
.ti -1c
.RI "struct \fBSwitchCaseLabel\fP"
.br
.ti -1c
.RI "struct \fBTryBlock\fP"
.br
.in -1c
.SS "Public Types"

.in +1c
.ti -1c
.RI "enum \fBELoopBreakType\fP { \fBLOOP_CONTINUE\fP, \fBLOOP_BREAK\fP }"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBScope\fP (\fBScope\fP *parent, ExpressionType, \fBTokenData\fP *)"
.br
.ti -1c
.RI "\fBLocalVar\fP & \fBgetLocalVar\fP (const \fBLocalVarDesc\fP &)"
.br
.ti -1c
.RI "bool \fBaddLoopBreak\fP (int pos, ELoopBreakType)"
.br
.ti -1c
.RI "void \fBfixLoopBreaks\fP (\fBCompiler\fP *, int scope_start_pos, int scope_end_pos)"
.br
.ti -1c
.RI "\fBScope\fP * \fBfindLoopScope\fP ()"
.br
.ti -1c
.RI "bool \fBaddCaseLabel\fP (\fBTokenData\fP *key, \fBExpression\fP *exp)"
.br
.ti -1c
.RI "bool \fBsetCaseLabelJump\fP (\fBTokenData\fP *key, int pos, \fBCompiler\fP *cmp)"
.br
.ti -1c
.RI "bool \fBsetCaseLabelPos\fP (\fBTokenData\fP *key, int pos, \fBCompiler\fP *cmp)"
.br
.ti -1c
.RI "\fBScope\fP * \fBgetSwitchScope\fP ()"
.br
.ti -1c
.RI "\fBScope\fP * \fBfindSwitchScope\fP ()"
.br
.ti -1c
.RI "void \fBaddPreVars\fP ()"
.br
.ti -1c
.RI "void \fBaddPostVars\fP ()"
.br
.ti -1c
.RI "void \fBaddLocalVar\fP (const \fBString\fP &name, ECompiledValueType type=CVT_UNKNOWN)"
.br
.ti -1c
.RI "void \fBaddLocalVar\fP (const \fBString\fP &name, \fBLocalVarDesc\fP &, ECompiledValueType type=CVT_UNKNOWN)"
.br
.ti -1c
.RI "int \fBallocTempVar\fP ()"
.br
.ti -1c
.RI "void \fBpopTempVar\fP (int count=1)"
.br
.ti -1c
.RI "void \fBaddTryBlock\fP (int start, int end, \fBScope\fP *catch_block)"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "\fBScope\fP * \fBparent\fP"
.br
.ti -1c
.RI "\fBScope\fP * \fBfunction\fP"
.br
.ti -1c
.RI "int \fBprog_func_index\fP"
.br
.ti -1c
.RI "\fBVector\fP< \fBLocalVar\fP > \fBlocals\fP"
.br
.ti -1c
.RI "\fBVector\fP< \fBLocalVarCompiled\fP > \fBlocals_compiled\fP"
.br
.ti -1c
.RI "\fBVector\fP< \fBTryBlock\fP > \fBtry_blocks\fP"
.br
.ti -1c
.RI "int \fBnum_params\fP"
.br
.ti -1c
.RI "int \fBnum_locals\fP"
.br
.ti -1c
.RI "int \fBopcodes_pos\fP"
.br
.ti -1c
.RI "int \fBopcodes_size\fP"
.br
.ti -1c
.RI "int \fBmax_up_count\fP"
.br
.ti -1c
.RI "int \fBfunc_depth\fP"
.br
.ti -1c
.RI "int \fBfunc_index\fP"
.br
.ti -1c
.RI "int \fBnum_local_funcs\fP"
.br
.ti -1c
.RI "int \fBstack_size\fP"
.br
.ti -1c
.RI "int \fBstack_cur_size\fP"
.br
.ti -1c
.RI "\fBVector\fP< \fBLoopBreak\fP > \fBloop_breaks\fP"
.br
.ti -1c
.RI "\fBVector\fP< \fBSwitchCaseLabel\fP > \fBcase_labels\fP"
.br
.ti -1c
.RI "bool \fBparser_started\fP"
.br
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
Definition at line 1872 of file objectscript\&.h\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for IceTea from the source code\&.
