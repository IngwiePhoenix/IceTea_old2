.TH "tthread::lock_guard< T >" 3 "Sat Mar 26 2016" "IceTea" \" -*- nroff -*-
.ad l
.nh
.SH NAME
tthread::lock_guard< T > \- Lock guard class\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <tinythread\&.h>\fP
.SS "Public Types"

.in +1c
.ti -1c
.RI "typedef T \fBmutex_type\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBlock_guard\fP (mutex_type &aMutex)"
.br
.RI "\fIThe constructor locks the mutex\&. \fP"
.ti -1c
.RI "\fB~lock_guard\fP ()"
.br
.RI "\fIThe destructor unlocks the mutex\&. \fP"
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<class T>
.br
class tthread::lock_guard< T >"
Lock guard class\&. 

The constructor locks the mutex, and the destructor unlocks the mutex, so the mutex will automatically be unlocked when the lock guard goes out of scope\&. Example usage: 
.PP
.nf
mutex m;
int counter;

void increment()
{
  lock_guard<mutex> guard(m);
  ++ counter;
}

.fi
.PP
 
.PP
Definition at line 343 of file tinythread\&.h\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for IceTea from the source code\&.
