.TH "ObjectScript::OSHeapManager" 3 "Sat Mar 26 2016" "IceTea" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ObjectScript::OSHeapManager \- 
.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBObjectScript::OS::MemoryManager\fP\&.
.SS "Classes"

.in +1c
.ti -1c
.RI "struct \fBBlock\fP"
.br
.ti -1c
.RI "struct \fBFreeBlock\fP"
.br
.ti -1c
.RI "struct \fBFreeSmallBlock\fP"
.br
.ti -1c
.RI "class \fBSimpleStats\fP"
.br
.ti -1c
.RI "struct \fBSmallBlock\fP"
.br
.ti -1c
.RI "struct \fBSmallPage\fP"
.br
.ti -1c
.RI "struct \fBStats\fP"
.br
.ti -1c
.RI "struct \fBSummaryStats\fP"
.br
.in -1c
.SS "Public Types"

.in +1c
.ti -1c
.RI "enum { \fBALIGN\fP = ((int)sizeof(void*)), \fBMAX_SMALL_SIZE\fP = (128 * sizeof(void*)/4), \fBDEF_PAGE_SIZE\fP = (1024 * 32 * sizeof(void*)/4) }"
.br
.ti -1c
.RI "enum \fBBlockType\fP { \fBBT_SMALL\fP, \fBBT_MEDIUM\fP, \fBBT_LARGE\fP }"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "virtual void * \fBmalloc\fP (int size)"
.br
.ti -1c
.RI "virtual void \fBfree\fP (void *p)"
.br
.ti -1c
.RI "virtual void \fBsetBreakpointId\fP (int id)"
.br
.ti -1c
.RI "virtual int \fBgetAllocatedBytes\fP ()"
.br
.ti -1c
.RI "virtual int \fBgetMaxAllocatedBytes\fP ()"
.br
.ti -1c
.RI "virtual int \fBgetUsedBytes\fP ()"
.br
.ti -1c
.RI "virtual int \fBgetCachedBytes\fP ()"
.br
.ti -1c
.RI "unsigned __int32 \fBgetSize\fP (void *p)"
.br
.ti -1c
.RI "unsigned __int32 \fBgetPageSize\fP () const "
.br
.ti -1c
.RI "void \fBdumpUsage\fP (\fBOS\fP *os, const char *filename)"
.br
.ti -1c
.RI "void \fBgetStats\fP (\fBStats\fP &small_stats, \fBStats\fP &medium_stats, \fBStats\fP &large_stats)"
.br
.ti -1c
.RI "void \fBgetStats\fP (\fBSummaryStats\fP &stats)"
.br
.ti -1c
.RI "void \fBcheckMemory\fP ()"
.br
.in -1c
.SS "Protected Types"

.in +1c
.ti -1c
.RI "enum { \fBSMALL_SLOT_COUNT\fP = (MAX_SMALL_SIZE + sizeof(SmallBlock) + 0 ) / ALIGN + 1 }"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "void * \fBallocSmall\fP (unsigned __int32 size)"
.br
.ti -1c
.RI "void \fBfreeSmall\fP (void *p)"
.br
.ti -1c
.RI "unsigned __int32 \fBgetSizeSmall\fP (void *p)"
.br
.ti -1c
.RI "void * \fBallocMedium\fP (unsigned __int32 size)"
.br
.ti -1c
.RI "void \fBfreeMedium\fP (void *p)"
.br
.ti -1c
.RI "unsigned __int32 \fBgetSizeMedium\fP (void *p)"
.br
.ti -1c
.RI "void \fBinsertFreeBlock\fP (\fBFreeBlock\fP *block)"
.br
.ti -1c
.RI "void * \fBallocLarge\fP (unsigned __int32 size)"
.br
.ti -1c
.RI "void \fBfreeLarge\fP (void *p)"
.br
.ti -1c
.RI "unsigned __int32 \fBgetSizeLarge\fP (void *p)"
.br
.ti -1c
.RI "void \fBwriteFile\fP (\fBOS\fP *os, \fBOS::FileHandle\fP *f, const char *buf)"
.br
.ti -1c
.RI "void \fBwriteStats\fP (\fBOS\fP *os, \fBOS::FileHandle\fP *f)"
.br
.ti -1c
.RI "void \fBwriteBlockHeader\fP (\fBOS\fP *os, \fBOS::FileHandle\fP *f, int type)"
.br
.ti -1c
.RI "void \fBwriteBlock\fP (\fBOS\fP *os, \fBOS::FileHandle\fP *f, \fBBlock\fP *block)"
.br
.ti -1c
.RI "void \fBwriteBlocks\fP (\fBOS\fP *os, \fBOS::FileHandle\fP *f, \fBBlock\fP *dummy_block)"
.br
.ti -1c
.RI "void \fBwriteFreeBlockHeader\fP (\fBOS\fP *os, \fBOS::FileHandle\fP *f)"
.br
.ti -1c
.RI "void \fBwriteFreeBlocks\fP (\fBOS\fP *os, \fBOS::FileHandle\fP *f)"
.br
.in -1c
.SS "Static Protected Member Functions"

.in +1c
.ti -1c
.RI "static int \fBceilPowerOfTwo\fP (int x)"
.br
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "unsigned __int32 \fBpage_size\fP"
.br
.ti -1c
.RI "unsigned __int32 \fBsmall_page_size\fP"
.br
.ti -1c
.RI "unsigned __int32 \fBmedium_size_mask\fP"
.br
.ti -1c
.RI "\fBFreeSmallBlock\fP * \fBfree_small_blocks\fP [SMALL_SLOT_COUNT]"
.br
.ti -1c
.RI "\fBSmallPage\fP \fBdummy_small_page\fP"
.br
.ti -1c
.RI "\fBSmallPage\fP * \fBsmall_page\fP"
.br
.ti -1c
.RI "unsigned __int32 \fBsmall_page_offs\fP"
.br
.ti -1c
.RI "\fBSimpleStats\fP \fBsmall_stats\fP"
.br
.ti -1c
.RI "\fBBlock\fP \fBdummy_block\fP"
.br
.ti -1c
.RI "\fBFreeBlock\fP \fBdummy_free\fP"
.br
.ti -1c
.RI "unsigned short \fBnext_page\fP"
.br
.ti -1c
.RI "\fBStats\fP \fBmedium_stats\fP"
.br
.ti -1c
.RI "\fBBlock\fP \fBdummy_large_block\fP"
.br
.ti -1c
.RI "\fBSimpleStats\fP \fBlarge_stats\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
Definition at line 116 of file os\-heap\&.h\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for IceTea from the source code\&.
